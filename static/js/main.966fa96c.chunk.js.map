{"version":3,"sources":["Card.js","Game.js","App.js","index.js"],"names":["Card","props","onClick","className","id","style","backgroundColor","color","Game","useState","deck","cards","clicked","addClicked","score","setScore","gameWon","resetGame","handleClick","e","console","log","difficulty","document","getElementById","innerHTML","newClicked","includes","target","length","push","useEffect","shuffledCards","i","rand","Math","floor","random","shuffleCards","map","card","App","diffMenu","setState","load","changeDifficulty","newDeck","howManyCards","value","allCards","currentDeck","onColor","offColor","state","this","fontSize","textDecoration","onMouseOver","onMouseOut","href","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.966fa96c.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css';\n\nexport default function Card(props) {\n    return (\n        <div onClick={props.onClick} className=\"cards\" id={props.id} style={{backgroundColor: props.color}}></div>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport Card from './Card'\nimport './App.css';\nimport App from './App'\nimport { render } from '@testing-library/react';\n\n\n// do it with colours\n\nexport default function Game(props) {\n    const [cards, setCards] = useState(props.deck)\n    const [clicked, addClicked] = useState([])\n    const [score, setScore] = useState(0)\n    const [gameWon, resetGame] = useState('no')\n\n    function shuffleCards() {\n        let shuffledCards = cards\n        for (let i = shuffledCards.length - 1; i > 0; i--) {\n            let rand = Math.floor(Math.random() * (i + 1));\n            [shuffledCards[i], shuffledCards[rand]] = [shuffledCards[rand], shuffledCards[i]]\n        }\n    }\n\n\n    useEffect(() => {\n        if (gameWon === 'yes') {\n            console.log('activated')\n            document.getElementById('title2').innerHTML = \"You Win! Click to play again!\"\n            document.getElementById('title2').style.color = \"blue\"\n            setScore(0)\n            let newClicked = clicked\n            newClicked.length = 0\n            addClicked(newClicked)\n            resetGame('no')\n        }\n    }, [gameWon])\n\n    shuffleCards()\n\n    function handleClick(e) {\n        console.log(props.difficulty)\n        document.getElementById('title2').innerHTML = \"Don't click the same color twice!\"\n        document.getElementById('title2').style.color = 'indianred'\n        let newClicked = clicked\n        if (!newClicked.includes(e.target.id)) {\n            newClicked.push(e.target.id)\n            setScore(score + 1)\n            if (score === cards.length - 1) {\n                resetGame(gameWon => 'yes')\n            }\n        } \n        else {\n            newClicked.length = 0\n            setScore(0)\n        }\n        addClicked(newClicked)\n    } \n \n    return (\n        <div id=\"gameCont\">\n\n            <div id=\"cards\">\n                {cards.map((card) => {\n                    return (\n                        <Card \n                        onClick={handleClick}\n                        //src={card.src}\n                        id={card}\n                        color={card}\n                        key={card} />\n                    )\n                })}\n            </div>\n            <label id=\"score\">Current Score: {score}</label>\n        </div>\n    )\n            }","import React, {Component} from 'react';\nimport './App.css';\nimport Game from './Game'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.allCards = ['#fca7f3 ', 'white', ' #6da740  ','  #f6faba  ', ' #ccc5c1 ', '  #f7791f  ', ' #575657 ', ' #03faf5 ', ' #13afdb ', ' #7509e2 ', ' #63522e ', ' #d809e2 ', '#060606', '#fd2f03',' #effa17 ',' #33fb2d ']\n    this.state = {load: \"no\", currentDeck: [' #ccc5c1 ', '  #f7791f  ', ' #575657 ', ' #03faf5 ',]}\n  }\n\n  diffMenu = () => {\n    document.getElementById('title2').innerHTML = \"Don't click the same color twice!\"\n    document.getElementById('title2').style.color = 'indianred' \n    this.setState({load: \"no\"})\n  }\n\n  changeDifficulty = (e) => {\n    document.getElementById('title2').innerHTML = \"Don't click the same color twice!\"\n    document.getElementById('title2').style.color = 'indianred' \n    let newDeck = []\n    let howManyCards = e.target.value \n    for (let i = 0; i < howManyCards; i++) {\n      newDeck.push(this.allCards[i])\n    }\n    this.setState({currentDeck: newDeck, load: 'yes'}) \n  }\n\n  onColor = (e) => {\n    e.target.style.color = \"orangered\"\n  }\n  offColor = (e) => {\n    e.target.style.color = \"indianred\"\n  }\n\n  render() {    \n  return (\n    <div className=\"App\">\n      <div id=\"main\">\n      <h1 id=\"title\">Color Memory Game</h1>\n      <h1 id=\"title2\">Don't click the same color twice!</h1>\n      {this.state.load === \"yes\" ? <button onClick={this.diffMenu} className=\"changeDifficulty\">Change Difficulty</button> : <div style={{fontSize: \"30px\", color: \"indianred\"}}>Select a difficulty:</div>}\n      {this.state.load === \"yes\" ? <Game deck={this.state.currentDeck} /> : <div id=\"diffButs\">\n      <button onClick={this.changeDifficulty} value=\"4\" className=\"difficulty\">Easy</button>\n      <br/>\n      <button onClick={this.changeDifficulty} value=\"8\" className=\"difficulty\">Medium</button>\n      <br/>\n      <button onClick={this.changeDifficulty} value=\"12\" className=\"difficulty\">Hard</button>\n      <br/>\n      <button onClick={this.changeDifficulty} value=\"16\" className=\"difficulty\">Very Hard</button>\n      </div>}\n      <label>{Game.score}</label>\n      <h1 id=\"credit\">\nBackground photo by <a style={{textDecoration: \"none\", color: \"indianred\"}} onMouseOver={this.onColor} onMouseOut={this.offColor} href=\"https://www.pexels.com/@deeanacreatesDeeana\">Deeana Creates</a> from <a onMouseOver={this.onColor} style={{textDecoration: \"none\", color: \"indianred\"}} onMouseOut={this.offColor} href=\"www.pexels.com\">Pexels</a>\n</h1>\n      </div>\n    </div>\n  );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}